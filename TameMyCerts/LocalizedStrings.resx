<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Events_MODULE_NOT_SUPPORTED" xml:space="preserve">
    <value>The {0} policy module currently does not support standalone certification authorities.</value>
  </data>
  <data name="Events_PDEF_FAIL_INIT" xml:space="preserve">
    <value>Error initializing Windows Default policy module:
{0}</value>
  </data>
  <data name="Events_PDEF_FAIL_SHUTDOWN" xml:space="preserve">
    <value>Shutting down Windows Default policy module failed:
{0}</value>
  </data>
  <data name="Events_PDEF_FAIL_VERIFY" xml:space="preserve">
    <value>Windows Default policy module was unable to verify request {0}:
{1}</value>
  </data>
  <data name="Events_PDEF_SUCCESS_INIT" xml:space="preserve">
    <value>{0} policy module version {1} is ready to process incoming certificate requests.</value>
  </data>
  <data name="Events_POLICY_NOT_FOUND" xml:space="preserve">
    <value>Unable to find policy file for {0}. Request {1} will get issued.</value>
  </data>
  <data name="Events_REQUEST_DENIED_POLICY_NOT_FOUND" xml:space="preserve">
    <value>Unable to find policy file for {0}. Request {1} will get denied.</value>
  </data>
  <data name="Events_REQUEST_DENIED" xml:space="preserve">
    <value>Request {0} for {1} was denied because:
{2}</value>
  </data>
  <data name="Events_REQUEST_CONTAINS_WARNINGS" xml:space="preserve">
    <value>The following warnings have been logged during the processing of request {0} for {1}:
{2}</value>
  </data>
  <data name="Events_REQUEST_DENIED_AUDIT" xml:space="preserve">
    <value>Audit mode is enabled for {1}. Request {0} would get denied because:
{2}</value>
  </data>
  <data name="Events_REQUEST_DENIED_NO_POLICY" xml:space="preserve">
    <value>Request {0} will get denied. Unable to interpret policy for {1} because:
{2}</value>
  </data>
  <data name="Events_REQUEST_DENIED_NO_TEMPLATE_INFO" xml:space="preserve">
    <value>No certificate template information for request {0} could be retrieved from the certification authority service. The request will get denied.</value>
  </data>
  <data name="ReqVal_Err_Parse_Request" xml:space="preserve">
    <value>Unable to parse the given certificate request. Request type was {0}.</value>
  </data>
  <data name="ReqVal_Key_Pair_Mismatch" xml:space="preserve">
    <value>The certificate request does not use a {0} key pair as required by the certificate template, but a {1} key pair.</value>
  </data>
  <data name="ReqVal_Key_Too_Small" xml:space="preserve">
    <value>Key length of {0} Bits is less than the required minimum length of {1} Bits.</value>
  </data>
  <data name="ReqVal_Key_Too_Large" xml:space="preserve">
    <value>Key length of {0} Bits is more than the allowed maximum length of {1} Bits.</value>
  </data>
  <data name="ReqVal_Err_Parse_SubjectDn" xml:space="preserve">
    <value>Unable to parse the given subject distinguished name.</value>
  </data>
  <data name="ReqVal_Unsupported_San_Type" xml:space="preserve">
    <value>The certificate request contains an unsupported Subject Alternative Name type with OID {0}.</value>
  </data>
  <data name="ReqVal_Field_Missing" xml:space="preserve">
    <value>The mandatory {0} field was not found in the request.</value>
  </data>
  <data name="ReqVal_Field_Count_Mismatch" xml:space="preserve">
    <value>The {0} field was found {1} times, but is allowed only {2} times.</value>
  </data>
  <data name="ReqVal_Field_Not_Allowed" xml:space="preserve">
    <value>The {0} field is not allowed.</value>
  </data>
  <data name="ReqVal_Field_Too_Long" xml:space="preserve">
    <value>The value "{0}" for the {1} field exceeds the maximum allowed length of {2} characters.</value>
  </data>
  <data name="ReqVal_Field_Not_Defined" xml:space="preserve">
    <value>No allowed patterns are defined for the {0} field.</value>
  </data>
  <data name="ReqVal_Err_Regex" xml:space="preserve">
    <value>Unable to match pattern "{0}" with value "{1}" for the {2} field.</value>
  </data>
  <data name="ReqVal_No_Match" xml:space="preserve">
    <value>The value "{0}" does not match any of the allowed patterns for the {1} field.</value>
  </data>
  <data name="ReqVal_Disallow_Match" xml:space="preserve">
    <value>The value "{0}" does match expression "{1}" which is disallowed for the {2} field.</value>
  </data>
  <data name="DirVal_Rdn_Invalid_Field" xml:space="preserve">
    <value>The field name "{0}" that was specified for construction of the mandatory subject relative distinguished name for {1} is unsupported.</value>
  </data>
  <data name="ReqVal_Field_Too_Short" xml:space="preserve">
    <value>The value "{0}" for the {1} field deceeds the minimum required length of {2} characters.</value>
  </data>
  <data name="Events_PDEF_REQUEST_DENIED" xml:space="preserve">
    <value>Request {0} was denied by the Windows Default policy module.</value>
  </data>
  <data name="ReqVal_Process_Disallowed" xml:space="preserve">
    <value>Process "{0}" used to create the certificate request is explicitly disallowed.</value>
  </data>
  <data name="ReqVal_Process_Not_Allowed" xml:space="preserve">
    <value>Process "{0}" used to create the certificate request is not on the list of allowed process names.</value>
  </data>
  <data name="ReqVal_Process_Unknown" xml:space="preserve">
    <value>Unable to determine the process name that was used to create the certificate request, but policy requires this information. Probably the certificate request does not contain such information.</value>
  </data>
  <data name="ReqVal_Crypto_Provider_Disallowed" xml:space="preserve">
    <value>Cryptographic provider "{0}" used to create the certificate request is explicitly disallowed.</value>
  </data>
  <data name="ReqVal_Crypto_Provider_Not_Allowed" xml:space="preserve">
    <value>Cryptographic provider "{0}" used to create the certificate request is not on the list of allowed providers.</value>
  </data>
  <data name="ReqVal_Crypto_Provider_Unknown" xml:space="preserve">
    <value>Unable to determine the cryptographic provider that was used to create the certificate request, but policy requires this information. Probably the certificate request does not contain such information.</value>
  </data>
  <data name="AttribVal_Insecure_Flags" xml:space="preserve">
    <value>The certificate request metadata contains the "san" request attribute, and the certification authority is configured with the EDITF_ATTRIBUTESUBJECTALTNAME2 flag. This is a highly dangerous configuration. The request was therefore denied.</value>
  </data>
  <data name="AttribVal_Insecure_Flags_detected" xml:space="preserve">
    <value>The certificate request metadata contains the "san" request attribute. If the certification authority is configured with the EDITF_ATTRIBUTESUBJECTALTNAME2 flag, this is a highly dangerous configuration.</value>
  </data>
  <data name="Events_VALIDITY_REDUCED" xml:space="preserve">
    <value>The certificate expiration date of request {0} for {1} was reduced to {2} (UTC) due to policy configuration.</value>
  </data>
  <data name="ReqVal_Err_NotAfter_Invalid" xml:space="preserve">
    <value>Unable to parse the configured expiration date specified in certificate request policy.</value>
  </data>
  <data name="ReqVal_Err_NotAfter_Passed" xml:space="preserve">
    <value>Certificate request policy requires issued certificates for this certificate template to expire no later than {0} (UTC), which lies in the past.</value>
  </data>
  <data name="ReqVal_Err_Parse_San" xml:space="preserve">
    <value>Unable to parse the Subject Alternative Name certificate request extension.</value>
  </data>
  <data name="ReqVal_Forbidden_Extensions" xml:space="preserve">
    <value>The certificate request contains a forbidden X.509 extension with object identifier {0} ({1}).</value>
  </data>
  <data name="Events_PDEF_REQUEST_DENIED_MESSAGE" xml:space="preserve">
    <value>Request {0} was denied by the Windows Default policy module: {1}</value>
  </data>
  <data name="AttibVal_Err_Parse" xml:space="preserve">
    <value>Unable to parse "{0}" request attribute. The value was "{1}".</value>
  </data>
  <data name="AttribVal_Invalid_StartDate" xml:space="preserve">
    <value>Unable to adjust begin of certificate validity period to {0} (UTC) as requested by "StartDate" request attribute. The requested date is invalid.</value>
  </data>
  <data name="DirVal_Account_Disabled" xml:space="preserve">
    <value>The {0} account for {1} is disabled.</value>
  </data>
  <data name="DirVal_Account_Groups_Disallowed" xml:space="preserve">
    <value>The {0} account for {1} is member of the forbidden group {2}.</value>
  </data>
  <data name="DirVal_Account_Groups_Not_Allowed" xml:space="preserve">
    <value>The {0} account for {1} is not member of any allowed group.</value>
  </data>
  <data name="DirVal_Account_Password_failed_to_parse" xml:space="preserve">
    <value>The password for the {0} failed to parse.</value>
  </data>
  <data name="DirVal_Account_Password_to_old" xml:space="preserve">
    <value>The password is older than the allowed {0} minutes.</value>
  </data>
  <data name="DirVal_Invalid_Directory_Attribute" xml:space="preserve">
    <value>An invalid directory attribute was specified in request policy: {0}.</value>
  </data>
  <data name="DirVal_Invalid_Object_Category" xml:space="preserve">
    <value>An invalid object category was specified in request policy: {0}.</value>
  </data>
  <data name="DirVal_Invalid_Result_Count" xml:space="preserve">
    <value>More than one {0} account with {1} of {2} was found in the directory.</value>
  </data>
  <data name="DirVal_No_Cert_Identity" xml:space="preserve">
    <value>No matching identity found for the {0} attribute in certificate request.</value>
  </data>
  <data name="DirVal_Query_Failed" xml:space="preserve">
    <value>Directory query {0} in {1} failed because {2}</value>
  </data>
  <data name="DirVal_Rdn_Directory_Attribute_too_long" xml:space="preserve">
    <value>The value "{0}" for directory attribute "{1}" that was specified for construction of the mandatory "{2}" subject relative distinguished name for {3} is too long. The maximum length is {4} characters for this RDN but the attribute is {5} characters long.</value>
  </data>
  <data name="DirVal_Rdn_Invalid_Directory_Attribute" xml:space="preserve">
    <value>The directory attribute "{0}" that was specified for construction of the mandatory "{1}" subject relative distinguished name is either not supported or not populated for {2}.</value>
  </data>
  <data name="Events_REQUEST_DENIED_NO_TEMPLATE_INFO_LOCAL" xml:space="preserve">
    <value>No certificate template information for request {0} could be retrieved from the local certificate template cache. The request will get denied.</value>
  </data>
  <data name="DirVal_Nothing_Found" xml:space="preserve">
    <value>No {0} account with {1} of {2} was found in the directory. Search root is {3}.</value>
  </data>
  <data name="DirVal_Disallow_Match" xml:space="preserve">
    <value>The value "{0}" does match the expression {1} which disallowed for the object name of {2}.</value>
  </data>
  <data name="DirVal_No_Match" xml:space="preserve">
    <value>The value "{0}" does not match any of the allowed patterns for the object name of {1}.</value>
  </data>
  <data name="DirVal_Disallow_Match_OU" xml:space="preserve">
    <value>The {0} account for {1} is member of the forbidden organizational unit {2}.</value>
  </data>
  <data name="DirVal_No_Match_OU" xml:space="preserve">
    <value>The {0} account for {1} is not member of any allowed organizational unit.</value>
  </data>
  <data name="DirVal_Invalid_Rule_Attribute" xml:space="preserve">
    <value>The mandatory "{0}" attribute is not present on {1}. Unable to apply syntax rules.</value>
  </data>
  <data name="Rdn_Invalid_Field" xml:space="preserve">
    <value>The field name "{0}" that was specified for construction of a Subject Relative Distinguished name is unsupported.</value>
  </data>
  <data name="Rdn_Value_Too_Long" xml:space="preserve">
    <value>The value "{0}" for that was specified for construction of the Subject Relative Distinguished Name of type "{1}" is too long. The maximum length is {2} characters for this RDN, but the attribute is {3} characters long.</value>
  </data>
  <data name="DirVal_San_Failed_to_add" xml:space="preserve">
    <value>The attempt to add the mandatory directory attribute "{0}" to the mandatory "{1}" subject alternative name type failed for {2}. This may be because of an incompatibility of data types.</value>
  </data>
  <data name="DirVal_San_Invalid_Directory_Attribute" xml:space="preserve">
    <value>The directory attribute "{0}" that was specified for construction of the mandatory "{1}" subject alternative name is either not supported or not populated for {2}.</value>
  </data>
  <data name="DirVal_San_Invalid_Field" xml:space="preserve">
    <value>The field name "{0}" that was specified for construction of the mandatory subject alternative name for {1} is unsupported.</value>
  </data>
  <data name="FinVal_No_Identity" xml:space="preserve">
    <value>The resulting certificate wouldn't contain any identity in form of a commonName or a Subject Alternative Name.</value>
  </data>
  <data name="San_unable_to_add" xml:space="preserve">
    <value>Unable to add entry of type "{0}" with value "{1}" to the Subject Alternative Name certificate extension. Either type or value is invalid.</value>
  </data>
  <data name="Token_invalid" xml:space="preserve">
    <value>The "{0}:{1}" token for the construction of a Subject Relative Distinguished Name is unknown. Ensure that Directory Service Mapping is enabled if it is an AD attribute, and that the originating certificate request contains the token, if it is a request field.</value>
    <comment>"</comment>
  </data>
  <data name="Events_SUCCESS_ISSUED" xml:space="preserve">
    <value>Request {0} for {1} will get issued.</value>
  </data>
  <data name="Events_SUCCESS_PENDING" xml:space="preserve">
    <value>Request {0} for {1} will be put into pending state.</value>
  </data>
  <data name="YKVal_Allowed_Firmware_Version" xml:space="preserve">
    <value>This Yubikey's firmware "{0}", is not on the list of allowed firmwares.</value>
  </data>
  <data name="YKVal_Allowed_PIN_Policy" xml:space="preserve">
    <value>This Yubikey's PIN policy "{0}", is not on the list of allowed PIN policies.</value>
  </data>
  <data name="YKVal_Allowed_Touch_Policy" xml:space="preserve">
    <value>This Yubikey's touch policy "{0}", is not on the list of allowed touch policies.</value>
  </data>
  <data name="YKVal_Disallowed_Firmware_Version" xml:space="preserve">
    <value>The Yubikey's firmware "{0}" is actively being denied.</value>
  </data>
  <data name="YKVal_Disallowed_PIN_Policy" xml:space="preserve">
    <value>The Yubikey's PIN Policy "{0}" is actively being denied.</value>
  </data>
  <data name="YKVal_Disallowed_Touch_Policy" xml:space="preserve">
    <value>The Yubikey's Touch Policy "{0}" is actively being denied.</value>
  </data>
  <data name="YKVal_Unable_to_read_embedded_certificates" xml:space="preserve">
    <value>The module was unable to read the embedded certificates. Actual error: {0}</value>
  </data>
  <data name="YKVal_No_Matching_Policy_Found" xml:space="preserve">
    <value>The request failed to find a matching yubikey policy, defaulting to deny.</value>
  </data>
  <data name="YKVal_Policy_Matches_with_Reject" xml:space="preserve">
    <value>The request matched a deny yubikey policy: {0}</value>
  </data>
  <data name="YKVal_Invalid_Attestion_with_YubikeyPolicy" xml:space="preserve">
    <value>The certificate request has been denied due to incorrect certificate request.</value>
  </data>
  <data name="event_YKVal_4201_Denied_by_Policy" xml:space="preserve">
    <value>The request {0}  was rejected due to policy: \r\n{1}</value>
  </data>
  <data name="event_YKVal_4202_Denied_by_Policy" xml:space="preserve">
    <value>The request {0} was rejected as the Yubikey Attestion failed for the embedded attestion.</value>
  </data>
  <data name="event_YKVal_4203_Denied_due_to_no_matching_policy_default_deny" xml:space="preserve">
    <value>The request {0} was denied due to not meeting any Grant policy in the Yubikey Validator.</value>
  </data>
  <data name="event_YKVal_4204_Matching_policy" xml:space="preserve">
    <value>The request {0} is matching policy: 
{1}
YubiKey attestion data:
{2}</value>
  </data>
  <data name="event_YKVal_4205_Failed_to_extract_Yubikey_Attestion" xml:space="preserve">
    <value>The request {0} contained an embedded Yubikey Attestion, but it failed to be extracted.</value>
  </data>
  <data name="event_YKVal_4206_Debug_failed_to_match_policy" xml:space="preserve">
    <value>The request {0} failed to match the Yubikey Policy: 
{1}</value>
  </data>
  <data name="event_YKVal_4207_Yubikey_Attestion_Missmatch_with_CSR" xml:space="preserve">
    <value>The request {0}, attestion certificates public key missmatch with the certificate request.</value>
  </data>
  <data name="event_YKVal_4208_Yubikey_Attestion_Failed_to_build" xml:space="preserve">
    <value>The request {0}, yubikey attestion failed to build trust chain to Yubikey CA.</value>
  </data>
  <data name="event_TMC_1_PolicyModule_Success_Initiated" xml:space="preserve">
    <value>{0} policy module version {1} is ready to process incoming certificate requests.</value>
  </data>
  <data name="event_TMC_2_PolicyModule_Failed_Initiated" xml:space="preserve">
    <value>Error initializing Windows Default policy module:
{0}</value>
  </data>
  <data name="event_TMC_12_Success_Issued" xml:space="preserve">
    <value>Request {0} for {1} will get issued.</value>
  </data>
  <data name="event_TMC_13_Success_Pending" xml:space="preserve">
    <value>Request {0} for {1} will be put into pending state.</value>
  </data>
  <data name="event_TMC_4_PolicyModule_Default_Shutdown_Failed" xml:space="preserve">
    <value>Shutting down Windows Default policy module failed:
{0}</value>
  </data>
  <data name="event_TMC_5_Analytical_Audit_only_Deny" xml:space="preserve">
    <value>Audit mode is enabled for {1}. Request {0} would get denied because:
{2}</value>
  </data>
  <data name="event_TMC_6_Deny_Issuing_Request" xml:space="preserve">
    <value>Request {0} for {1} was denied because:
{2}</value>
  </data>
  <data name="event_TMC_91_Policy_Read" xml:space="preserve">
    <value>TameMyCerts read the policy from file: 
{0} 
 
with the content: 
{1} </value>
  </data>
  <data name="event_TMC_92_Policy_Unknown_XML_Element" xml:space="preserve">
    <value>XML policy unknown Element: {0} at line {1}, position {2}, Elements are case sensitive.</value>
  </data>
  <data name="event_TMC_93_Policy_Unknown_XML_Attribute" xml:space="preserve">
    <value>Unknown Attribute: {0}='{1}' at line {2}, position {3}</value>
  </data>
  <data name="event_CCVal_4651_SAN_Already_Exists" xml:space="preserve">
    <value>Wont update request {0}. The subjectAltName "{1}" already exists with value "{2}", ignoring "{3}" as Force is not True.</value>
  </data>
  <data name="event_CCVal_4652_SAN_Added" xml:space="preserve">
    <value>Updated request {0}. The subjectAltName "{1}" now has "{2}" added.</value>
  </data>
  <data name="event_CCVal_4653_SAN_Failed_to_add" xml:space="preserve">
    <value>Failed to add the subjectAltName "{1}" to "{2}" for requestID {0}.</value>
  </data>
  <data name="event_CCVal_4654_SAN_Failed_Mandatory" xml:space="preserve">
    <value>Denying requestid {0} as subjectAltName "{1}" is mandatory and failed.</value>
  </data>
  <data name="event_YKVal_4209_Found_Attestation_Location" xml:space="preserve">
    <value>The YubiKey attestation was located in OID {1} for request: {0}.</value>
  </data>
  <data name="DirVal_TokenGroupNames_Failed" xml:space="preserve">
    <value>Unable to determine the msds-TokenGroupNames attribute for {0}. Note that this attribute is only available on Windows Server 2016 and newer Domain Controllers.</value>
  </data>
  <data name="event_TMC_94_XML_Parsing_error" xml:space="preserve">
    <value>Unable to parse '{0}', {1}.</value>
  </data>
</root>